{"ast":null,"code":"var _jsxFileName = \"E:\\\\IT React\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport Styles from \"./ContactForm.module.css\";\nexport default class ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const onSubmit = this.props.onSubmit;\n      const _this$state = this.state,\n            name = _this$state.name,\n            number = _this$state.number;\n      onSubmit({\n        id: shortid.generate(),\n        name,\n        number\n      });\n      this.setState({\n        name: \"\",\n        number: \"\"\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n  }\n\n  render() {\n    const htmlFor = this.props.htmlFor;\n    const nameId = htmlFor.nameId,\n          numberId = htmlFor.numberId;\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          number = _this$state2.number;\n    const verificationLength = name.length === 0 || number.length === 0;\n    const verificationNumber = Number.isNaN(Number(number)) || number === null;\n    const submitVerification = verificationLength || verificationNumber;\n    return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: Styles.contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: nameId,\n      className: Styles[\"name-title\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Name\", React.createElement(\"input\", {\n      className: Styles[\"name-input\"],\n      onChange: this.handleChange,\n      value: name,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Input name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: numberId,\n      className: Styles[\"name-title\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Number\", React.createElement(\"input\", {\n      className: Styles[\"name-input\"],\n      onChange: this.handleChange,\n      value: number,\n      name: \"number\",\n      type: \"tel\",\n      placeholder: \"Input phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      disabled: submitVerification,\n      type: \"submit\",\n      className: !submitVerification ? Styles.button : Styles.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Add contact\")));\n  }\n\n}\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  htmlFor: PropTypes.shape({\n    nameId: PropTypes.string.isRequired,\n    numberId: PropTypes.string.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["E:/IT React/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","Component","PropTypes","shortid","Styles","ContactForm","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","onSubmit","props","state","number","id","generate","render","htmlFor","nameId","numberId","verificationLength","length","verificationNumber","Number","isNaN","submitVerification","contact","button","disabled","propTypes","func","isRequired","shape","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\nimport Styles from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { onSubmit } = this.props;\r\n    const { name, number } = this.state;\r\n    onSubmit({ id: shortid.generate(), name, number });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { htmlFor } = this.props;\r\n    const { nameId, numberId } = htmlFor;\r\n    const { name, number } = this.state;\r\n    const verificationLength = name.length === 0 || number.length === 0;\r\n    const verificationNumber = Number.isNaN(Number(number)) || number === null;\r\n    const submitVerification = verificationLength || verificationNumber;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={Styles.contact}>\r\n          <label htmlFor={nameId} className={Styles[\"name-title\"]}>\r\n            Name\r\n            <input\r\n              className={Styles[\"name-input\"]}\r\n              onChange={this.handleChange}\r\n              value={name}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Input name\"\r\n            />\r\n          </label>\r\n          <label htmlFor={numberId} className={Styles[\"name-title\"]}>\r\n            Number\r\n            <input\r\n              className={Styles[\"name-input\"]}\r\n              onChange={this.handleChange}\r\n              value={number}\r\n              name=\"number\"\r\n              type=\"tel\"\r\n              placeholder=\"Input phone\"\r\n            />\r\n          </label>\r\n          <button\r\n            disabled={submitVerification}\r\n            type=\"submit\"\r\n            className={!submitVerification ? Styles.button : Styles.disabled}\r\n          >\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    htmlFor: PropTypes.shape({\r\n      nameId: PropTypes.string.isRequired,\r\n      numberId: PropTypes.string.isRequired\r\n    }).isRequired\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}